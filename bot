import time
import json
import requests
import logging
from flask import Flask, request

"""
=====================
üìå Webex Timer Bot - Guideline üìå
=====================

üîπ –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–æ—Ç:
1. –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ —á–∞—Ç Webex.
2. –ù–∞–ø–∏—à–∏—Ç–µ "timer" –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Ç–∞–π–º–µ—Ä–∞.
3. –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö —Ç–∞–π–º–µ—Ä–æ–≤ (30 —Å–µ–∫, 1 –º–∏–Ω, 5 –º–∏–Ω) –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë –≤—Ä–µ–º—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö.
4. –ë–æ—Ç –∑–∞–ø—É—Å—Ç–∏—Ç —Ç–∞–π–º–µ—Ä –∏ —É–≤–µ–¥–æ–º–∏—Ç –≤–∞—Å, –∫–æ–≥–¥–∞ –≤—Ä–µ–º—è –∏—Å—Ç–µ—á—ë—Ç.

üîπ –ö–æ–º–∞–Ω–¥—ã:
- "timer" ‚Äì –ø–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫–∏ —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ —Ç–∞–π–º–µ—Ä–∞.
- "30 —Å–µ–∫", "1 –º–∏–Ω", "5 –º–∏–Ω" ‚Äì –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Ç–∞–π–º–µ—Ä.
- "—Ç–∞–π–º–µ—Ä X" ‚Äì –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç–∞–π–º–µ—Ä –Ω–∞ X —Å–µ–∫—É–Ω–¥ (X ‚Äì –ª—é–±–æ–µ —á–∏—Å–ª–æ).

üîπ –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
- –í—ã: "timer"
- –ë–æ—Ç: "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞–π–º–µ—Ä: 30 —Å–µ–∫, 1 –º–∏–Ω, 5 –º–∏–Ω –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë –≤—Ä–µ–º—è."
- –í—ã: "1 –º–∏–Ω"
- –ë–æ—Ç: "–¢–∞–π–º–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ 60 —Å–µ–∫—É–Ω–¥..."
- (–°–ø—É—Å—Ç—è 60 —Å–µ–∫—É–Ω–¥)
- –ë–æ—Ç: "‚è∞ –í—Ä–µ–º—è –≤—ã—à–ª–æ!"

"""

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è (–ß–∞—Å—Ç—å –ú–∞–∫—Å–∞—Ç–∞)
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

# Webex Bot Token (–∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π) (–ß–∞—Å—Ç—å –†–∏—à–∞—Ç–∞)
WEBEX_BOT_TOKEN = "N2NlMWM0ZTktODY4OS00MjM1LTg2YzMtYjc3NjhlZjIwNWRmOTcyMjYxYzMtZmE3_PE93_d84055ec-08e2-496f-a788-e38009e29164"
HEADERS = {"Authorization": f"Bearer {WEBEX_BOT_TOKEN}", "Content-Type": "application/json"}

app = Flask(__name__)
user_guideline_sent = set()  # –•—Ä–∞–Ω–∏—Ç ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≥–∞–π–¥

# –ß–∞—Å—Ç—å –†–∏—à–∞—Ç–∞ - —á–∏—Å—Ç–∞—è –ª–æ–≥–∏–∫–∞
def get_message(message_id):
    """–ü–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ –µ–≥–æ ID"""
    url = f"https://webexapis.com/v1/messages/{message_id}"
    response = requests.get(url, headers=HEADERS)
    return response.json() if response.status_code == 200 else None

@app.route("/webhook", methods=["POST"])
def webhook():
    data = request.json
    if "data" in data and "id" in data["data"]:
        process_message(data["data"]["id"])
    return "OK", 200

# –ß–∞—Å—Ç—å –ú–∞–∫—Å–∞—Ç–∞ - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
def process_message(message_id):
    message_data = get_message(message_id)
    if not message_data:
        logging.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è ID {message_id}")
        return
    
    user_id = message_data.get("personId")
    text = message_data.get("text", "").lower()
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–∞–π–¥, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–ø–µ—Ä–≤—ã–µ –ø–∏—à–µ—Ç –±–æ—Ç—É
    if user_id not in user_guideline_sent:
        send_guideline(user_id)
        user_guideline_sent.add(user_id)
    
    if "timer" in text:
        send_buttons(user_id)
    elif any(keyword in text for keyword in ["30 —Å–µ–∫", "1 –º–∏–Ω", "5 –º–∏–Ω"]):
        start_timer(user_id, parse_timer(text))
    else:
        try:
            seconds = int(text.split()[-1])
            start_timer(user_id, seconds)
        except ValueError:
            send_message(user_id, "–û—à–∏–±–∫–∞: –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ —Å–µ–∫—É–Ω–¥.")

# –ß–∞—Å—Ç—å –†–∏—à–∞—Ç–∞ - –ø—Ä–æ—Å—Ç–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö
def parse_timer(text):
    return {"30 —Å–µ–∫": 30, "1 –º–∏–Ω": 60, "5 –º–∏–Ω": 300}.get(text, 0)

# –ß–∞—Å—Ç—å –ú–∞–∫—Å–∞—Ç–∞ - –ø–æ—è—Å–Ω—è—é—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
def send_buttons(user_id):
    message = "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞–π–º–µ—Ä:\n1. 30 —Å–µ–∫\n2. 1 –º–∏–Ω\n3. 5 –º–∏–Ω\n4. –í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–µ –≤—Ä–µ–º—è (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)"
    send_message(user_id, message)

# –ß–∞—Å—Ç—å –†–∏—à–∞—Ç–∞ - –æ—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Ä–∞–±–æ—Ç—ã —Ç–∞–π–º–µ—Ä–∞
def start_timer(user_id, seconds):
    if seconds <= 0:
        send_message(user_id, "–û—à–∏–±–∫–∞: –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏.")
        return
    send_message(user_id, f"–¢–∞–π–º–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ {seconds} —Å–µ–∫—É–Ω–¥...")
    time.sleep(seconds)
    send_message(user_id, "‚è∞ –í—Ä–µ–º—è –≤—ã—à–ª–æ!")

# –ß–∞—Å—Ç—å –ú–∞–∫—Å–∞—Ç–∞ - –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π
def send_message(user_id, text):
    url = "https://webexapis.com/v1/messages"
    payload = {"toPersonId": user_id, "text": text}
    try:
        response = requests.post(url, headers=HEADERS, json=payload)
        response.raise_for_status()
    except requests.exceptions.RequestException as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

# –ß–∞—Å—Ç—å –ú–∞–∫—Å–∞—Ç–∞ - –æ—Ç–ø—Ä–∞–≤–∫–∞ –≥–∞–π–¥–µ–Ω—Å–∞ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def send_guideline(user_id):
    guideline_text = (
        "üìå Webex Timer Bot - –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ\n\n"
        "üîπ –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–æ—Ç:\n"
        "1. –ù–∞–ø–∏—à–∏—Ç–µ 'timer', —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç—ã —Ç–∞–π–º–µ—Ä–∞.\n"
        "2. –í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ç–∞–π–º–µ—Ä –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö.\n"
        "3. –ë–æ—Ç —É–≤–µ–¥–æ–º–∏—Ç –≤–∞—Å, –∫–æ–≥–¥–∞ –≤—Ä–µ–º—è –∏—Å—Ç–µ—á—ë—Ç.\n\n"
        "üîπ –ö–æ–º–∞–Ω–¥—ã:\n"
        "- 'timer' ‚Äì –ø–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫–∏.\n"
        "- '30 —Å–µ–∫', '1 –º–∏–Ω', '5 –º–∏–Ω' ‚Äì –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç–∞–π–º–µ—Ä.\n"
        "- '—Ç–∞–π–º–µ—Ä X' ‚Äì —Ç–∞–π–º–µ—Ä –Ω–∞ X —Å–µ–∫—É–Ω–¥."
    )
    send_message(user_id, guideline_text)

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=5000, debug=True)
